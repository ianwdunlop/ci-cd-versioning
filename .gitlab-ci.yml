stages:
  - ensure-build
  - release
  - build

release:
  stage: release
  image: registry.mdcatapult.io/informatics/docker-images/runners/debian
  before_script:
    - apt-get update -yqq && apt-get install -yqq build-essential apt-transport-https ca-certificates curl gnupg git bc jq wget git-lfs python3 python3-pip python3-venv
    - python3 -m venv venv
    - . venv/bin/activate
    - pip install -r requirements.txt
  script:
    - ./cictl exec release
  only:
    - master
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /^Setting version to.*/

default:
  tags:
    - wopr
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  before_script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json

debian:
  stage: build
  script:
    - |
      /kaniko/executor --context $CI_PROJECT_DIR --dockerfile debian/Dockerfile \
      --destination $CI_REGISTRY_IMAGE/debian:latest \
      --destination $CI_REGISTRY_IMAGE/debian:$CI_COMMIT_REF_NAME
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_MESSAGE =~ /^Setting version to.*/

golang:
  stage: build
  script:
    - |
      /kaniko/executor --context $CI_PROJECT_DIR --dockerfile golang/Dockerfile \
      --destination $CI_REGISTRY_IMAGE/golang:latest \
      --destination $CI_REGISTRY_IMAGE/golang:$CI_COMMIT_REF_NAME
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_MESSAGE =~ /^Setting version to.*/

scala:
  stage: build
  script:
    - |
      /kaniko/executor --context $CI_PROJECT_DIR --dockerfile scala/Dockerfile \
      --destination $CI_REGISTRY_IMAGE/scala:latest \
      --destination $CI_REGISTRY_IMAGE/scala:$CI_COMMIT_REF_NAME
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_MESSAGE =~ /^Setting version to.*/

scala-jdk14:
  stage: build
  script:
    - |
      /kaniko/executor --context $CI_PROJECT_DIR --dockerfile scala/Dockerfile \
      --build-arg TAG=jdk14 \
      --destination $CI_REGISTRY_IMAGE/scala:jdk14 \
      --destination $CI_REGISTRY_IMAGE/scala:jdk14-$CI_COMMIT_REF_NAME
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_MESSAGE =~ /^Setting version to.*/

python:
  stage: build
  script:
    - |
      /kaniko/executor --context $CI_PROJECT_DIR --dockerfile python/Dockerfile \
      --destination $CI_REGISTRY_IMAGE/python:latest \
      --destination $CI_REGISTRY_IMAGE/python:$CI_COMMIT_REF_NAME
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_MESSAGE =~ /^Setting version to.*/

python3.6:
  stage: build
  script:
    - |
      /kaniko/executor --context $CI_PROJECT_DIR --dockerfile python/Dockerfile \
      --build-arg TAG=3.6 \
      --destination $CI_REGISTRY_IMAGE/python:3.6 \
      --destination $CI_REGISTRY_IMAGE/python:3.6-$CI_COMMIT_REF_NAME
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_MESSAGE =~ /^Setting version to.*/

python3.7:
  stage: build
  script:
    - |
      /kaniko/executor --context $CI_PROJECT_DIR --dockerfile python/Dockerfile \
      --build-arg TAG=3.7 \
      --destination $CI_REGISTRY_IMAGE/python:3.7 \
      --destination $CI_REGISTRY_IMAGE/python:3.7-$CI_COMMIT_REF_NAME
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_MESSAGE =~ /^Setting version to.*/

node:
  stage: build
  script:
    - |
      /kaniko/executor --context $CI_PROJECT_DIR --dockerfile node/Dockerfile \
      --destination $CI_REGISTRY_IMAGE/node:latest \
      --destination $CI_REGISTRY_IMAGE/node:$CI_COMMIT_REF_NAME
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_MESSAGE =~ /^Setting version to.*/

ensure-debian:
  stage: ensure-build
  script:
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile debian/Dockerfile --no-push
  except:
    refs:
      - master
      - tags
    variables:
      - $CI_COMMIT_MESSAGE =~ /^Setting version to.*/

ensure-golang:
  stage: ensure-build
  script:
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile golang/Dockerfile --no-push
  except:
    refs:
      - master
      - tags
    variables:
      - $CI_COMMIT_MESSAGE =~ /^Setting version to.*/

ensure-scala:
  stage: ensure-build
  script:
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile scala/Dockerfile --no-push
  except:
    refs:
      - master
      - tags
    variables:
      - $CI_COMMIT_MESSAGE =~ /^Setting version to.*/

ensure-scala-jdk14:
  stage: ensure-build
  script:
    - /kaniko/executor --build-arg TAG=jdk14 --context $CI_PROJECT_DIR --dockerfile scala/Dockerfile --no-push
  except:
    refs:
      - master
      - tags
    variables:
      - $CI_COMMIT_MESSAGE =~ /^Setting version to.*/

ensure-python:
  stage: ensure-build
  script:
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile python/Dockerfile --no-push
  except:
    refs:
      - master
      - tags
    variables:
      - $CI_COMMIT_MESSAGE =~ /^Setting version to.*/

ensure-python3.6:
  stage: ensure-build
  script:
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile python/Dockerfile --build-arg TAG=3.6 --no-push
  except:
    refs:
      - master
      - tags
    variables:
      - $CI_COMMIT_MESSAGE =~ /^Setting version to.*/

ensure-python3.7:
  stage: ensure-build
  script:
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile python/Dockerfile --build-arg TAG=3.7 --no-push
  except:
    refs:
      - master
      - tags
    variables:
      - $CI_COMMIT_MESSAGE =~ /^Setting version to.*/

ensure-node:
  stage: ensure-build
  script:
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile node/Dockerfile --no-push
  except:
    refs:
      - master
      - tags
    variables:
      - $CI_COMMIT_MESSAGE =~ /^Setting version to.*/