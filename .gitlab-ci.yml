services:
  - docker:dind

stages:
  - build-common
  - build
  - release

default:
  image: docker:latest
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY

build-common-master:
  stage: build-common
  script:
    - docker build --pull -f common/Dockerfile -t "$CI_REGISTRY_IMAGE:common" .
    - docker push "$CI_REGISTRY_IMAGE:common"
  rules:
    - if: $CI_COMMIT_BRANCH == "master"
      changes:
        - common/*

release-common:
  stage: release
  image: ubuntu:18.04
  before_script: [""]
  script:
    - ./release.sh common
  rules:
    - if: $CI_COMMIT_BRANCH == "master"
      changes:
        - common/*

tag-common:
  stage: build-common
  script:
    - docker build --pull -f common/Dockerfile -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME" .
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME"
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_REF_NAME =~ /^common-v\d\.\d\.\d$/

release-golang:
  stage: release
  image: ubuntu:18.04
  before_script: [""]
  script:
    - ./release.sh golang
  rules:
    - changes:
        - common/*
      when: never
    - if: $CI_COMMIT_BRANCH == "master"
      changes:
        - golang/*

tag-golang:
  stage: build
  script:
    - docker build --pull -f golang/Dockerfile -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME" -t "$CI_REGISTRY_IMAGE:golang" .
    - docker push "$CI_REGISTRY_IMAGE:golang"
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME"
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_REF_NAME =~ /^golang-v\d\.\d\.\d$/

release-scala:
  stage: release
  image: ubuntu:18.04
  before_script: [""]
  script:
    - ./release.sh scala
  rules:
    - changes:
        - common/*
      when: never
    - if: $CI_COMMIT_BRANCH == "master"
      changes:
        - scala/*

tag-scala:
  stage: build
  script:
    - docker build --pull -f scala/Dockerfile -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME" -t "$CI_REGISTRY_IMAGE:scala" .
    - docker push "$CI_REGISTRY_IMAGE:scala"
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME"
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_REF_NAME =~ /^scala-v\d\.\d\.\d$/

release-python:
  stage: release
  image: ubuntu:18.04
  before_script: [""]
  script:
    - ./release.sh python
  rules:
    - changes:
        - common/*
      when: never
    - if: $CI_COMMIT_BRANCH == "master"
      changes:
        - python/*

tag-python:
  stage: build
  script:
    - docker build --pull -f python/Dockerfile -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME" -t "$CI_REGISTRY_IMAGE:python" .
    - docker push "$CI_REGISTRY_IMAGE:python"
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME"
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_REF_NAME =~ /^python-v\d\.\d\.\d$/

release-node:
  stage: release
  image: ubuntu:18.04
  before_script: [""]
  script:
    - ./release.sh node
  rules:
    - changes:
        - common/*
      when: never
    - if: $CI_COMMIT_BRANCH == "master"
      changes:
        - node/*

tag-node:
  stage: build
  script:
    - docker build --pull -f node/Dockerfile -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME" -t "$CI_REGISTRY_IMAGE:node" .
    - docker push "$CI_REGISTRY_IMAGE:node"
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME"
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_REF_NAME =~ /^node-v\d\.\d\.\d$/
